@model Scrumy.Models.MixedVM.RetroVM


<section class="retro container">
    <h2>Sprints Retrospective</h2>

    <div class="row">
        @foreach (var item in Model.Sprints)
        {
           
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" href="#collapse1-@item.Id">Sprint Target: @item.SprintTarget</a>
                        </h4>
                    </div>
                    <div id="collapse1-@item.Id" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6">
                                    @foreach (var item2 in Model.Tasks)
                                    {
                                        if (item2.SprintId == item.Id)
                                        {
                                            <div class="element toDo-element">
                                                <p>@item2.Title</p>
                                                <p>@item2.Desc</p>
                                            </div>
                                        }
                                    }
                                </div>
                                <div class="col-md-6">
                                    @foreach (var item3 in Model.Feedback)
                                    {
                                        if (item3.SprintId == item.Id)
                                        {
                                            if (item3.OpinionType == true)
                                            {
                                                <div class="opinion opinion-positive">
                                                    <p>Opinion: @item3.Comment</p>
                                                    <p>Author: @item3.Author</p>
                                                    <p>Posted At: @item3.AddedAt.ToLongDateString()</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="opinion opinion-negative">
                                                    <p>Opinion: @item3.Comment</p>
                                                    <p>Author: @item3.Author</p>
                                                    <p>Posted At: @item3.AddedAt.ToLongDateString()</p>
                                                </div>
                                            }

                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        }
        <div class="col-md-12">
            <button type="button" class="btn-view margin-auto" data-toggle="modal" data-target="#addOpinionModal">Add Opinion</button>
            @await Html.PartialAsync("_addOpinionModal", Model.OpinionToAdd)
        </div>
    </div>
</section>