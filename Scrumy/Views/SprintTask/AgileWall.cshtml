@model Scrumy.Models.MixedVM.AgileWallVM

<section class="agilewall container-full">
    <h2>AgileWall</h2>
    <div class="container-full-90">
        <div class="row">
            <div class="col-md-3 wall-col">
                <h4>Backlog</h4>
                @foreach (var item in Model.TaskList)
                {
                    @if (item.isInBacklog == true)
                    {
                        <div class="toDo-element element">
                            <p>
                                Title: @Html.DisplayFor(modelItem => item.Title)
                            </p>

                            @if (User.IsInRole("Product Owner"))
                            {
                                <a asp-area="" asp-controller="SprintTask" asp-action="Delete" asp-route-id="@item.Id" class="delete-icon" title="Delete">
                                    <i class="fas fa-times-circle"></i>
                                </a>
                            }

                            <button type="button" class="btn-action" data-toggle="modal" data-target="#@item.Id">Details</button>
                            <div class="move-buttons">
                                <a asp-area="" asp-controller="SprintTask" asp-action="MoveAsToDoInNextSprint" asp-route-id="@item.Id" class="move-right" title="Set as ToDo in next Sprint">
                                    <i class="fas fa-arrow-circle-right"></i>
                                </a>
                            </div>


                            <!-- Modal -->
                            <div class="modal fade" id="@item.Id" role="dialog">
                                    @await Html.PartialAsync("_taskDetailsModal", item)
                            </div>
                            @* modal ends *@
                        </div>
                    }

                }

                @if (User.IsInRole("Product Owner"))
                {
                    <button type="button" class="btn-view margin-auto" data-toggle="modal" data-target="#addTaskModal">Create Task</button>
                    @await Html.PartialAsync("_addTaskModal", Model.TaskToCreate)
                }
            </div>
            <div class="col-md-3 wall-col">
                <h4>ToDo in Next Sprint</h4>
                @foreach (var item in Model.TaskList)
                {
                    @if (item.willBeInNextSprint == true)
                    {
                        <div class="willBeInNextSprint-element element">
                            <p>
                                Title: @Html.DisplayFor(modelItem => item.Title)
                            </p>

                            <button type="button" class="btn-action" data-toggle="modal" data-target="#@item.Id">Details</button>
                            <div class="move-buttons">
                                <a asp-area="" asp-controller="SprintTask" asp-action="BackToBacklog" asp-route-id="@item.Id" class="move-left" title="Back To Backlog">
                                    <i class="fas fa-arrow-circle-left"></i>
                                </a>

                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="@item.Id" role="dialog">
                                @await Html.PartialAsync("_taskDetailsModal", item)
                            </div>

                        </div>
                    }

                }
               
                @if (!Model.TaskList.Any(t => t.isInCurrentSprint == true))
                {
                    <a asp-area="" asp-controller="Sprint" asp-action="Discuss" class="btn-view btn-view-large margin-auto">
                        Plan Sprint
                    </a>
                }
            </div>
            <div class="col-md-3 wall-col">
                <h4>ToDo in Current Sprint</h4>
                @foreach (var item in Model.TaskList)
                {
                    @if (item.isInCurrentSprint == true)
                    {
                        <div class="inCurrentSprint-element element">
                            <p>
                                Title: @Html.DisplayFor(modelItem => item.Title)
                            </p>
                            @if (item.StoryPointsValue != 0)
                            {
                                <p>
                                    SP: @item.StoryPointsValue
                                </p>
                            }
                            else
                            {
                                <p>
                                    <i class="fas fa-exclamation-circle"></i> This task has no Story Point Value
                                </p>

                            }



                            @if (item.whoIsWorkingOn != null)
                            {
                                <p>
                                    DEV: @item.whoIsWorkingOn
                                </p>
                            }
                            <button type="button" class="btn-action" data-toggle="modal" data-target="#@item.Id">Details</button>
                            <div class="move-buttons">
                                @if (item.StoryPointsValue != 0 && item.whoIsWorkingOn != null)
                                {
                                    <a asp-area="" asp-controller="SprintTask" asp-action="SetAsDone" asp-route-id="@item.Id" class="move-right" title="Set as Done">
                                        <i class="fas fa-check-circle"></i>
                                    </a>
                                }

                                @if (User.IsInRole("Developer") && item.whoIsWorkingOn == null)
                                {
                                    <a asp-area="" asp-controller="SprintTask" asp-action="SetAsCurrentlyWorkingOn" asp-route-id="@item.Id" class="move-right" title="Click if you will work on this">
                                        <i class="fas fa-hand-paper"></i>
                                    </a>
                                }

                            </div>

                            <div class="modal fade" id="@item.Id" role="dialog">
                                @await Html.PartialAsync("_taskDetailsModal", item)
                            </div>

                        </div>
                    }

                }

                @if (User.IsInRole("Developer") 
                    && Model.TaskList.Any(x=>x.StoryPointsValue==0 
                    && x.isInCurrentSprint==true))
                {
                    <div class="col-md-12">
                        <button type="button" class="btn-view btn-view-large margin-auto" data-toggle="modal" data-target="#addStoryPointsValueModal">Add Story Points Value</button>
                        @await Html.PartialAsync("_addStoryPointsValueModal", Model.StoryPointsValueToAdd)
                    </div>
                }
            </div>
            <div class="col-md-3 wall-col">
                <h4>Done</h4>
                @foreach (var item in Model.TaskList)
                {
                    @if (item.isDone == true)
                    {
                        <div class="done-element element">
                            <p>
                                Title: @Html.DisplayFor(modelItem => item.Title)
                            </p>

                            <button type="button" class="btn-action" data-toggle="modal" data-target="#@item.Id">Details</button>
                            <div class="move-buttons">
                                <a asp-area="" asp-controller="SprintTask" asp-action="MoveAsToDoInNextSprint" asp-route-id="@item.Id" class="move-left" title="Set as ToDo in next Sprint">
                                    <i class="fas fa-times-circle"></i>
                                </a>
                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="@item.Id" role="dialog">
                                @await Html.PartialAsync("_taskDetailsModal", item)
                            </div>

                        </div>
                    }

                }
            </div>

        </div>
    </div>
</section>